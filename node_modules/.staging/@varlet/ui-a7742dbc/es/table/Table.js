import { defineComponent } from 'vue';
import { toSizeUnit } from '../utils/elements';
import { createNamespace } from '../utils/components';
var {
  n,
  classes
} = createNamespace('table');
import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from "vue";
export function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.classes(_ctx.n(), 'var-elevation--1 var--box'))
  }, [_createElementVNode("div", {
    class: _normalizeClass(_ctx.n('main'))
  }, [_createElementVNode("table", {
    class: _normalizeClass(_ctx.n('table')),
    style: _normalizeStyle({
      width: _ctx.toSizeUnit(_ctx.fullWidth)
    })
  }, [_renderSlot(_ctx.$slots, "default")], 6
  /* CLASS, STYLE */
  )], 2
  /* CLASS */
  ), _ctx.$slots.footer ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.n('footer'))
  }, [_renderSlot(_ctx.$slots, "footer")], 2
  /* CLASS */
  )) : _createCommentVNode("v-if", true)], 2
  /* CLASS */
  );
}
export default defineComponent({
  render,
  name: 'VarTable',
  props: {
    fullWidth: {
      type: [Number, String],
      default: '100%'
    }
  },

  setup() {
    return {
      toSizeUnit,
      n,
      classes
    };
  }

});