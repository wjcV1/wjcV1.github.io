import VarDialog from './Dialog.js'
import { reactive, nextTick } from 'vue';
import { inBrowser, isNumber, isString } from '@varlet/shared';
import { mountInstance } from '../utils/components';
var singletonOptions;

function Dialog(options) {
  if (!inBrowser()) {
    return Promise.resolve();
  }

  return new Promise(resolve => {
    Dialog.close();
    var dialogOptions = isString(options) || isNumber(options) ? {
      message: String(options)
    } : options;
    var reactiveDialogOptions = reactive(dialogOptions);
    reactiveDialogOptions.teleport = 'body';
    singletonOptions = reactiveDialogOptions;
    var {
      unmountInstance
    } = mountInstance(VarDialog, reactiveDialogOptions, {
      onConfirm: () => {
        reactiveDialogOptions.onConfirm == null ? void 0 : reactiveDialogOptions.onConfirm();
        resolve('confirm');
      },
      onCancel: () => {
        reactiveDialogOptions.onCancel == null ? void 0 : reactiveDialogOptions.onCancel();
        resolve('cancel');
      },
      onClose: () => {
        reactiveDialogOptions.onClose == null ? void 0 : reactiveDialogOptions.onClose();
        resolve('close');
      },
      onClosed: () => {
        reactiveDialogOptions.onClosed == null ? void 0 : reactiveDialogOptions.onClosed();
        unmountInstance();
        singletonOptions === reactiveDialogOptions && (singletonOptions = null);
      },
      onRouteChange: () => {
        unmountInstance();
        singletonOptions === reactiveDialogOptions && (singletonOptions = null);
      },
      'onUpdate:show': value => {
        reactiveDialogOptions.show = value;
      }
    });
    reactiveDialogOptions.show = true;
  });
}

VarDialog.install = function (app) {
  app.component(VarDialog.name, VarDialog);
};

Dialog.install = function (app) {
  app.component(VarDialog.name, VarDialog);
};

Dialog.close = () => {
  if (singletonOptions != null) {
    var prevSingletonOptions = singletonOptions;
    singletonOptions = null;
    nextTick().then(() => {
      prevSingletonOptions.show = false;
    });
  }
};

Dialog.Component = VarDialog;
export var _DialogComponent = VarDialog;
export default Dialog;