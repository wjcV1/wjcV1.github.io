import { defineComponent, ref, onMounted, onUpdated } from 'vue';
import { props } from './props';
import { createNamespace } from '../utils/components';
var {
  n,
  classes
} = createNamespace('app-bar');
import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from "vue";
export function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.classes(_ctx.n(), [_ctx.elevation, 'var-elevation--3'])),
    style: _normalizeStyle({
      background: _ctx.color,
      color: _ctx.textColor
    })
  }, [_createElementVNode("div", {
    class: _normalizeClass(_ctx.n('left'))
  }, [_renderSlot(_ctx.$slots, "left"), _ctx.titlePosition === 'left' ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.n('title')),
    style: _normalizeStyle({
      paddingLeft: _ctx.paddingLeft
    })
  }, [_renderSlot(_ctx.$slots, "default", {}, () => [_createTextVNode(_toDisplayString(_ctx.title), 1
  /* TEXT */
  )])], 6
  /* CLASS, STYLE */
  )) : _createCommentVNode("v-if", true)], 2
  /* CLASS */
  ), _ctx.titlePosition === 'center' ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.n('title'))
  }, [_renderSlot(_ctx.$slots, "default", {}, () => [_createTextVNode(_toDisplayString(_ctx.title), 1
  /* TEXT */
  )])], 2
  /* CLASS */
  )) : _createCommentVNode("v-if", true), _createElementVNode("div", {
    class: _normalizeClass(_ctx.n('right'))
  }, [_ctx.titlePosition === 'right' ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.n('title')),
    style: _normalizeStyle({
      paddingRight: _ctx.paddingRight
    })
  }, [_renderSlot(_ctx.$slots, "default", {}, () => [_createTextVNode(_toDisplayString(_ctx.title), 1
  /* TEXT */
  )])], 6
  /* CLASS, STYLE */
  )) : _createCommentVNode("v-if", true), _renderSlot(_ctx.$slots, "right")], 2
  /* CLASS */
  )], 6
  /* CLASS, STYLE */
  );
}
export default defineComponent({
  render,
  name: 'VarAppBar',
  props,

  setup(props, _ref) {
    var {
      slots
    } = _ref;
    var paddingLeft = ref();
    var paddingRight = ref();

    var computePadding = () => {
      paddingLeft.value = slots.left ? 0 : undefined;
      paddingRight.value = slots.right ? 0 : undefined;
    };

    onMounted(computePadding);
    onUpdated(computePadding);
    return {
      n,
      classes,
      paddingLeft,
      paddingRight
    };
  }

});