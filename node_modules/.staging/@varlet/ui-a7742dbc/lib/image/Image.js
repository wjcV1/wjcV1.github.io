"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _ripple = _interopRequireDefault(require("../ripple"));

var _lazy = _interopRequireDefault(require("../lazy"));

var _vue = require("vue");

var _props = require("./props");

var _elements = require("../utils/elements");

var _components = require("../utils/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n,
  classes
} = (0, _components.createNamespace)('image');

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = ["alt", "lazy-error", "lazy-loading"];
var _hoisted_2 = ["alt", "src"];

function render(_ctx, _cache) {
  var _directive_lazy = (0, _vue.resolveDirective)("lazy");

  var _directive_ripple = (0, _vue.resolveDirective)("ripple");

  return (0, _vue.withDirectives)(((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(), 'var--box', [!_ctx.block, 'var--inline-block'])),
    style: (0, _vue.normalizeStyle)({
      width: _ctx.toSizeUnit(_ctx.width),
      height: _ctx.toSizeUnit(_ctx.height),
      'border-radius': _ctx.toSizeUnit(_ctx.radius)
    })
  }, [_ctx.lazy ? (0, _vue.withDirectives)(((0, _vue.openBlock)(), (0, _vue.createElementBlock)("img", {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n('image')),
    alt: _ctx.alt,
    "lazy-error": _ctx.error,
    "lazy-loading": _ctx.loading,
    style: (0, _vue.normalizeStyle)({
      objectFit: _ctx.fit
    }),
    onLoad: _cache[0] || (_cache[0] = function () {
      return _ctx.handleLoad && _ctx.handleLoad(...arguments);
    }),
    onError: _cache[1] || (_cache[1] = function () {
      return _ctx.handleError && _ctx.handleError(...arguments);
    }),
    onClick: _cache[2] || (_cache[2] = function () {
      return _ctx.onClick && _ctx.onClick(...arguments);
    })
  }, null, 46
  /* CLASS, STYLE, PROPS, HYDRATE_EVENTS */
  , _hoisted_1)), [[_directive_lazy, _ctx.src]]) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("img", {
    key: 1,
    class: (0, _vue.normalizeClass)(_ctx.n('image')),
    alt: _ctx.alt,
    style: (0, _vue.normalizeStyle)({
      objectFit: _ctx.fit
    }),
    src: _ctx.src,
    onLoad: _cache[3] || (_cache[3] = function () {
      return _ctx.handleLoad && _ctx.handleLoad(...arguments);
    }),
    onError: _cache[4] || (_cache[4] = function () {
      return _ctx.handleError && _ctx.handleError(...arguments);
    }),
    onClick: _cache[5] || (_cache[5] = function () {
      return _ctx.onClick && _ctx.onClick(...arguments);
    })
  }, null, 46
  /* CLASS, STYLE, PROPS, HYDRATE_EVENTS */
  , _hoisted_2))], 6
  /* CLASS, STYLE */
  )), [[_directive_ripple, {
    disabled: !_ctx.ripple
  }]]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarImage',
  directives: {
    Lazy: _lazy.default,
    Ripple: _ripple.default
  },
  props: _props.props,

  setup(props) {
    var handleLoad = e => {
      var el = e.currentTarget;
      var {
        lazy,
        onLoad,
        onError
      } = props;

      if (lazy) {
        el._lazy.state === 'success' && (0, _components.call)(onLoad, e);
        el._lazy.state === 'error' && (0, _components.call)(onError, e);
      } else {
        (0, _components.call)(onLoad, e);
      }
    };

    var handleError = e => {
      var {
        lazy,
        onError
      } = props;
      !lazy && (0, _components.call)(onError, e);
    };

    return {
      n,
      classes,
      toSizeUnit: _elements.toSizeUnit,
      handleLoad,
      handleError
    };
  }

});

exports.default = _default;