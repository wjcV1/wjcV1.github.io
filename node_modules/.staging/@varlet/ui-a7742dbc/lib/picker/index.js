"use strict";

exports.__esModule = true;
exports.default = exports._PickerComponent = void 0;

var _Picker = _interopRequireDefault(require("./Picker.js"));

var _vue = require("vue");

var _shared = require("@varlet/shared");

var _components = require("../utils/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var singletonOptions;

function Picker(options) {
  return new Promise(resolve => {
    Picker.close();
    var pickerOptions = (0, _shared.isArray)(options) ? {
      columns: options
    } : options;
    var reactivePickerOptions = (0, _vue.reactive)(pickerOptions);
    reactivePickerOptions.dynamic = true;
    reactivePickerOptions.teleport = 'body';
    singletonOptions = reactivePickerOptions;
    var {
      unmountInstance
    } = (0, _components.mountInstance)(_Picker.default, reactivePickerOptions, {
      onConfirm: (texts, indexes) => {
        reactivePickerOptions.onConfirm == null ? void 0 : reactivePickerOptions.onConfirm(texts, indexes);
        resolve({
          state: 'confirm',
          texts,
          indexes
        });
        reactivePickerOptions.show = false;
        singletonOptions === reactivePickerOptions && (singletonOptions = null);
      },
      onCancel: (texts, indexes) => {
        reactivePickerOptions.onCancel == null ? void 0 : reactivePickerOptions.onCancel(texts, indexes);
        resolve({
          state: 'cancel',
          texts,
          indexes
        });
        reactivePickerOptions.show = false;
        singletonOptions === reactivePickerOptions && (singletonOptions = null);
      },
      onClose: () => {
        reactivePickerOptions.onClose == null ? void 0 : reactivePickerOptions.onClose();
        resolve({
          state: 'close'
        });
        singletonOptions === reactivePickerOptions && (singletonOptions = null);
      },
      onClosed: () => {
        reactivePickerOptions.onClosed == null ? void 0 : reactivePickerOptions.onClosed();
        unmountInstance();
        singletonOptions === reactivePickerOptions && (singletonOptions = null);
      },
      onRouteChange: () => {
        unmountInstance();
        singletonOptions === reactivePickerOptions && (singletonOptions = null);
      },
      'onUpdate:show': value => {
        reactivePickerOptions.show = value;
      }
    });
    reactivePickerOptions.show = true;
  });
}

_Picker.default.install = function (app) {
  app.component(_Picker.default.name, _Picker.default);
};

Picker.Component = _Picker.default;

Picker.install = function (app) {
  app.component(_Picker.default.name, _Picker.default);
};

Picker.close = () => {
  if (singletonOptions != null) {
    var prevSingletonOptions = singletonOptions;
    singletonOptions = null;
    (0, _vue.nextTick)().then(() => {
      prevSingletonOptions.show = false;
    });
  }
};

var _PickerComponent = _Picker.default;
exports._PickerComponent = _PickerComponent;
var _default = Picker;
exports.default = _default;