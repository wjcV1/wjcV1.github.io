"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _vue = require("vue");

var _props = require("./props");

var _components = require("../utils/components");

var {
  n,
  classes
} = (0, _components.createNamespace)('app-bar');

function render(_ctx, _cache) {
  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(), [_ctx.elevation, 'var-elevation--3'])),
    style: (0, _vue.normalizeStyle)({
      background: _ctx.color,
      color: _ctx.textColor
    })
  }, [(0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n('left'))
  }, [(0, _vue.renderSlot)(_ctx.$slots, "left"), _ctx.titlePosition === 'left' ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n('title')),
    style: (0, _vue.normalizeStyle)({
      paddingLeft: _ctx.paddingLeft
    })
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, () => [(0, _vue.createTextVNode)((0, _vue.toDisplayString)(_ctx.title), 1
  /* TEXT */
  )])], 6
  /* CLASS, STYLE */
  )) : (0, _vue.createCommentVNode)("v-if", true)], 2
  /* CLASS */
  ), _ctx.titlePosition === 'center' ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n('title'))
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, () => [(0, _vue.createTextVNode)((0, _vue.toDisplayString)(_ctx.title), 1
  /* TEXT */
  )])], 2
  /* CLASS */
  )) : (0, _vue.createCommentVNode)("v-if", true), (0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n('right'))
  }, [_ctx.titlePosition === 'right' ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n('title')),
    style: (0, _vue.normalizeStyle)({
      paddingRight: _ctx.paddingRight
    })
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, () => [(0, _vue.createTextVNode)((0, _vue.toDisplayString)(_ctx.title), 1
  /* TEXT */
  )])], 6
  /* CLASS, STYLE */
  )) : (0, _vue.createCommentVNode)("v-if", true), (0, _vue.renderSlot)(_ctx.$slots, "right")], 2
  /* CLASS */
  )], 6
  /* CLASS, STYLE */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarAppBar',
  props: _props.props,

  setup(props, _ref) {
    var {
      slots
    } = _ref;
    var paddingLeft = (0, _vue.ref)();
    var paddingRight = (0, _vue.ref)();

    var computePadding = () => {
      paddingLeft.value = slots.left ? 0 : undefined;
      paddingRight.value = slots.right ? 0 : undefined;
    };

    (0, _vue.onMounted)(computePadding);
    (0, _vue.onUpdated)(computePadding);
    return {
      n,
      classes,
      paddingLeft,
      paddingRight
    };
  }

});

exports.default = _default;