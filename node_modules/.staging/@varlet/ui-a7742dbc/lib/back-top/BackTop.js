"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _vue = require("vue");

var _button = _interopRequireDefault(require("../button"));

var _icon = _interopRequireDefault(require("../icon"));

var _props = require("./props");

var _shared = require("@varlet/shared");

var _shared2 = require("../utils/shared");

var _elements = require("../utils/elements");

var _components = require("../utils/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n,
  classes
} = (0, _components.createNamespace)('back-top');

function render(_ctx, _cache) {
  var _component_var_icon = (0, _vue.resolveComponent)("var-icon");

  var _component_var_button = (0, _vue.resolveComponent)("var-button");

  return (0, _vue.openBlock)(), (0, _vue.createBlock)(_vue.Teleport, {
    to: "body",
    disabled: _ctx.disabled
  }, [(0, _vue.createElementVNode)("div", (0, _vue.mergeProps)({
    class: _ctx.classes(_ctx.n(), [_ctx.show, _ctx.n('--active')]),
    ref: "backTopEl",
    style: {
      right: _ctx.toSizeUnit(_ctx.right),
      bottom: _ctx.toSizeUnit(_ctx.bottom)
    }
  }, _ctx.$attrs, {
    onClick: _cache[0] || (_cache[0] = (0, _vue.withModifiers)(function () {
      return _ctx.click && _ctx.click(...arguments);
    }, ["stop"]))
  }), [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, () => [(0, _vue.createVNode)(_component_var_button, {
    type: "primary",
    round: "",
    "var-back-top-cover": ""
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.createVNode)(_component_var_icon, {
      name: "chevron-up"
    })]),
    _: 1
    /* STABLE */

  })])], 16
  /* FULL_PROPS */
  )], 8
  /* PROPS */
  , ["disabled"]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarBackTop',
  components: {
    VarButton: _button.default,
    VarIcon: _icon.default
  },
  inheritAttrs: false,
  props: _props.props,

  setup(props) {
    var show = (0, _vue.ref)(false);
    var backTopEl = (0, _vue.ref)(null);
    var disabled = (0, _vue.ref)(true);
    var target;

    var click = event => {
      (0, _components.call)(props.onClick, event);
      var left = (0, _elements.getScrollLeft)(target);
      (0, _elements.scrollTo)(target, {
        left,
        duration: props.duration,
        animation: _shared2.easeInOutCubic
      });
    };

    var scroll = () => {
      show.value = (0, _elements.getScrollTop)(target) >= (0, _elements.toPxNum)(props.visibilityHeight);
    };

    var throttleScroll = (0, _shared.throttle)(scroll, 200);

    var getTarget = () => {
      var {
        target
      } = props;

      if ((0, _shared.isString)(target)) {
        var el = document.querySelector(props.target);

        if (!el) {
          throw Error('[Varlet] BackTop: target element cannot found');
        }

        return el;
      }

      if ((0, _shared.isObject)(target)) return target;
      throw Error('[Varlet] BackTop: type of prop "target" should be a selector or an element object');
    };

    (0, _vue.onMounted)(() => {
      target = props.target ? getTarget() : (0, _elements.getParentScroller)(backTopEl.value);
      target.addEventListener('scroll', throttleScroll);
      disabled.value = false;
    });
    (0, _vue.onBeforeUnmount)(() => {
      target.removeEventListener('scroll', throttleScroll);
    });
    return {
      disabled,
      show,
      backTopEl,
      toSizeUnit: _elements.toSizeUnit,
      n,
      classes,
      click
    };
  }

});

exports.default = _default;