"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _vue = require("vue");

var _dayjs = _interopRequireDefault(require("dayjs"));

var _shared = require("@varlet/shared");

var _components = require("../../utils/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n,
  classes
} = (0, _components.createNamespace)('year-picker');

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = ["onClick"];

function render(_ctx, _cache) {
  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("ul", {
    class: (0, _vue.normalizeClass)(_ctx.n())
  }, [((0, _vue.openBlock)(true), (0, _vue.createElementBlock)(_vue.Fragment, null, (0, _vue.renderList)(_ctx.yearList, year => {
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("li", {
      key: year,
      class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n('item'), [year === _ctx.toNumber(_ctx.preview), _ctx.n('item--active')])),
      style: (0, _vue.normalizeStyle)({
        color: year === _ctx.toNumber(_ctx.preview) ? _ctx.componentProps.color : ''
      }),
      onClick: $event => _ctx.chooseYear(year)
    }, (0, _vue.toDisplayString)(year), 15
    /* TEXT, CLASS, STYLE, PROPS */
    , _hoisted_1);
  }), 128
  /* KEYED_FRAGMENT */
  ))], 2
  /* CLASS */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'YearPickerPanel',
  props: {
    preview: {
      type: String
    },
    componentProps: {
      type: Object,
      required: true
    }
  },
  emits: ['choose-year'],

  setup(props, _ref) {
    var {
      emit
    } = _ref;
    var yearList = (0, _vue.computed)(() => {
      var list = [];
      var {
        preview,
        componentProps: {
          max,
          min
        }
      } = props;
      if (!preview) return list;
      var yearRange = [(0, _shared.toNumber)(preview) + 100, (0, _shared.toNumber)(preview) - 100];

      if (max) {
        var formatMax = (0, _dayjs.default)(max).format('YYYY-MM-D');
        var year = (0, _shared.toNumber)(formatMax.split('-')[0]);
        if (year < yearRange[0] && year > yearRange[1]) yearRange = [year, yearRange[1]];
        if (year <= yearRange[1]) return [year];
      }

      if (min) {
        var formatMin = (0, _dayjs.default)(min).format('YYYY-MM-D');

        var _year = (0, _shared.toNumber)(formatMin.split('-')[0]);

        if (_year < yearRange[0] && _year > yearRange[1]) yearRange = [yearRange[0], _year];
        if (_year >= yearRange[0]) return [_year];
      }

      for (var i = yearRange[0]; i >= yearRange[1]; i--) {
        list.push(i);
      }

      return list;
    });

    var chooseYear = year => {
      emit('choose-year', year);
    };

    (0, _vue.onMounted)(() => {
      var activeEl = document.querySelector("." + n('item--active'));
      activeEl == null ? void 0 : activeEl.scrollIntoView({
        block: 'center'
      });
    });
    return {
      n,
      classes,
      yearList,
      chooseYear,
      toNumber: _shared.toNumber
    };
  }

});

exports.default = _default;