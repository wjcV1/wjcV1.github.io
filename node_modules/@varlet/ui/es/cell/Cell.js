import { defineComponent } from 'vue';
import { props } from './props';
import VarIcon from '../icon';
import { createNamespace } from '../utils/components';
var {
  n,
  classes
} = createNamespace('cell');
import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode } from "vue";
export function render(_ctx, _cache) {
  var _component_var_icon = _resolveComponent("var-icon");

  return _openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.classes(_ctx.n(), [_ctx.border, _ctx.n('--border')]))
  }, [_ctx.$slots.icon || _ctx.icon ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.classes(_ctx.n('icon'), [_ctx.iconClass, _ctx.iconClass]))
  }, [_renderSlot(_ctx.$slots, "icon", {}, () => [_createVNode(_component_var_icon, {
    class: "var--flex",
    name: _ctx.icon
  }, null, 8
  /* PROPS */
  , ["name"])])], 2
  /* CLASS */
  )) : _createCommentVNode("v-if", true), _createElementVNode("div", {
    class: _normalizeClass(_ctx.n('content'))
  }, [_createElementVNode("div", {
    class: _normalizeClass(_ctx.classes(_ctx.n('title'), [_ctx.titleClass, _ctx.titleClass]))
  }, [_renderSlot(_ctx.$slots, "default", {}, () => [_createTextVNode(_toDisplayString(_ctx.title), 1
  /* TEXT */
  )])], 2
  /* CLASS */
  ), _ctx.$slots.desc || _ctx.desc ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.classes(_ctx.n('desc'), [_ctx.descClass, _ctx.descClass]))
  }, [_renderSlot(_ctx.$slots, "desc", {}, () => [_createTextVNode(_toDisplayString(_ctx.desc), 1
  /* TEXT */
  )])], 2
  /* CLASS */
  )) : _createCommentVNode("v-if", true)], 2
  /* CLASS */
  ), _ctx.$slots.extra ? (_openBlock(), _createElementBlock("div", {
    key: 1,
    class: _normalizeClass(_ctx.classes(_ctx.n('extra'), [_ctx.extraClass, _ctx.extraClass]))
  }, [_renderSlot(_ctx.$slots, "extra")], 2
  /* CLASS */
  )) : _createCommentVNode("v-if", true)], 2
  /* CLASS */
  );
}
export default defineComponent({
  render,
  name: 'VarCell',
  components: {
    VarIcon
  },
  props,

  setup() {
    return {
      n,
      classes
    };
  }

});