import VarActionSheet from './ActionSheet.js'
import { nextTick, reactive } from 'vue';
import { inBrowser } from '@varlet/shared';
import { mountInstance } from '../utils/components';
var singletonOptions;

function ActionSheet(options) {
  if (!inBrowser()) {
    return Promise.resolve();
  }

  return new Promise(resolve => {
    ActionSheet.close();
    var reactiveActionSheetOptions = reactive(options);
    reactiveActionSheetOptions.teleport = 'body';
    singletonOptions = reactiveActionSheetOptions;
    var {
      unmountInstance
    } = mountInstance(VarActionSheet, reactiveActionSheetOptions, {
      onSelect: action => {
        reactiveActionSheetOptions.onSelect == null ? void 0 : reactiveActionSheetOptions.onSelect(action);
        resolve(action);
      },
      onClose: () => {
        reactiveActionSheetOptions.onClose == null ? void 0 : reactiveActionSheetOptions.onClose();
        resolve('close');
      },
      onClosed: () => {
        reactiveActionSheetOptions.onClosed == null ? void 0 : reactiveActionSheetOptions.onClosed();
        unmountInstance();
        singletonOptions === reactiveActionSheetOptions && (singletonOptions = null);
      },
      onRouteChange: () => {
        unmountInstance();
        singletonOptions === reactiveActionSheetOptions && (singletonOptions = null);
      },
      'onUpdate:show': value => {
        reactiveActionSheetOptions.show = value;
      }
    });
    reactiveActionSheetOptions.show = true;
  });
}

ActionSheet.Component = VarActionSheet;

VarActionSheet.install = function (app) {
  app.component(VarActionSheet.name, VarActionSheet);
};

ActionSheet.close = () => {
  if (singletonOptions != null) {
    var prevSingletonOptions = singletonOptions;
    singletonOptions = null;
    nextTick().then(() => {
      prevSingletonOptions.show = false;
    });
  }
};

ActionSheet.install = function (app) {
  app.component(VarActionSheet.name, VarActionSheet);
};

export var _ActionSheetComponent = VarActionSheet;
export default ActionSheet;