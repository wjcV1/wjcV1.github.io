"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _button = _interopRequireDefault(require("../../button"));

var _icon = _interopRequireDefault(require("../../icon"));

var _vue = require("vue");

var _shared = require("@varlet/shared");

var _components = require("../../utils/components");

var _locale = require("../../locale");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n
} = (0, _components.createNamespace)('picker-header');

function render(_ctx, _cache) {
  var _component_var_icon = (0, _vue.resolveComponent)("var-icon");

  var _component_var_button = (0, _vue.resolveComponent)("var-button");

  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n())
  }, [(0, _vue.createVNode)(_component_var_button, {
    round: "",
    text: "",
    style: {
      "filter": "opacity(0.54)"
    },
    disabled: _ctx.disabled.left,
    onClick: _cache[0] || (_cache[0] = $event => _ctx.checkDate('prev'))
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.createVNode)(_component_var_icon, {
      name: "chevron-left"
    })]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["disabled"]), (0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n('value')),
    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('check-panel'))
  }, [(0, _vue.createVNode)(_vue.Transition, {
    name: "var-date-picker" + (_ctx.reverse ? '-reverse' : '') + "-translatex"
  }, {
    default: (0, _vue.withCtx)(() => [((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: _ctx.showDate
    }, (0, _vue.toDisplayString)(_ctx.showDate), 1
    /* TEXT */
    ))]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["name"])], 2
  /* CLASS */
  ), (0, _vue.createVNode)(_component_var_button, {
    round: "",
    text: "",
    style: {
      "filter": "opacity(0.54)"
    },
    disabled: _ctx.disabled.right,
    onClick: _cache[2] || (_cache[2] = $event => _ctx.checkDate('next'))
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.createVNode)(_component_var_icon, {
      name: "chevron-right"
    })]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["disabled"])], 2
  /* CLASS */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'PanelHeader',
  components: {
    VarButton: _button.default,
    VarIcon: _icon.default
  },
  props: {
    date: {
      type: Object,
      required: true
    },
    type: {
      type: String,
      default: 'date'
    },
    disabled: {
      type: Object,
      required: true
    }
  },
  emits: ['check-panel', 'check-date'],

  setup(props, _ref) {
    var {
      emit
    } = _ref;
    var reverse = (0, _vue.ref)(false);
    var forwardOrBackNum = (0, _vue.ref)(0);
    var showDate = (0, _vue.computed)(() => {
      var _pack$value$datePicke;

      var {
        date,
        type
      } = props;
      var {
        previewMonth,
        previewYear
      } = date;
      if (type === 'month') return (0, _shared.toNumber)(previewYear) + forwardOrBackNum.value;
      var monthName = (_pack$value$datePicke = _locale.pack.value.datePickerMonthDict) == null ? void 0 : _pack$value$datePicke[previewMonth.index].name;
      return _locale.pack.value.lang === 'zh-CN' ? previewYear + " " + monthName : monthName + " " + previewYear;
    });

    var checkDate = checkType => {
      if (checkType === 'prev' && props.disabled.left || checkType === 'next' && props.disabled.right) return;
      emit('check-date', checkType);
      reverse.value = checkType === 'prev';
      forwardOrBackNum.value += checkType === 'prev' ? -1 : 1;
    };

    (0, _vue.watch)(() => props.date, () => {
      forwardOrBackNum.value = 0;
    });
    return {
      n,
      reverse,
      showDate,
      checkDate
    };
  }

});

exports.default = _default;