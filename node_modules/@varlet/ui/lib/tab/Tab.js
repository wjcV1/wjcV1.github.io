"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _ripple = _interopRequireDefault(require("../ripple"));

var _vue = require("vue");

var _props = require("./props");

var _components = require("../utils/components");

var _provide = require("./provide");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n,
  classes
} = (0, _components.createNamespace)('tab');

function render(_ctx, _cache) {
  var _directive_ripple = (0, _vue.resolveDirective)("ripple");

  return (0, _vue.withDirectives)(((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(), 'var--box', _ctx.computeColorClass(), _ctx.n("--" + _ctx.itemDirection))),
    ref: "tabEl",
    style: (0, _vue.normalizeStyle)({
      color: _ctx.computeColorStyle()
    }),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.handleClick && _ctx.handleClick(...arguments);
    })
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default")], 6
  /* CLASS, STYLE */
  )), [[_directive_ripple, {
    disabled: _ctx.disabled
  }]]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarTab',
  directives: {
    Ripple: _ripple.default
  },
  props: _props.props,

  setup(props) {
    var tabEl = (0, _vue.ref)(null);
    var name = (0, _vue.computed)(() => props.name);
    var disabled = (0, _vue.computed)(() => props.disabled);
    var element = (0, _vue.computed)(() => tabEl.value);
    var {
      index,
      tabs,
      bindTabs
    } = (0, _provide.useTabs)();
    var {
      onTabClick,
      active,
      activeColor,
      inactiveColor,
      disabledColor,
      itemDirection,
      resize
    } = tabs;
    var tabProvider = {
      name,
      index,
      disabled,
      element
    };
    bindTabs(tabProvider);

    var computeColorStyle = () => {
      var {
        disabled,
        name
      } = props;
      return disabled ? disabledColor.value : active.value === name || active.value === (index == null ? void 0 : index.value) ? activeColor.value : inactiveColor.value;
    };

    var computeColorClass = () => {
      var {
        disabled,
        name
      } = props;
      return disabled ? 'var-tab--disabled' : active.value === name || active.value === (index == null ? void 0 : index.value) ? 'var-tab--active' : 'var-tab--inactive';
    };

    var handleClick = event => {
      var {
        disabled,
        name,
        onClick
      } = props;

      if (disabled) {
        return;
      }

      onClick == null ? void 0 : onClick(name != null ? name : index.value, event);
      onTabClick(tabProvider);
    };

    (0, _vue.watch)(() => props.name, resize);
    (0, _vue.watch)(() => props.disabled, resize);
    return {
      n,
      classes,
      tabEl,
      active,
      activeColor,
      inactiveColor,
      itemDirection,
      computeColorStyle,
      computeColorClass,
      handleClick
    };
  }

});

exports.default = _default;