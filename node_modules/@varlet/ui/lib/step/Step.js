"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _vue = require("vue");

var _props = require("./props");

var _provide = require("./provide");

var _icon = _interopRequireDefault(require("../icon"));

var _components = require("../utils/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var {
  n,
  classes
} = (0, _components.createNamespace)('step');

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = {
  key: 3
};

function render(_ctx, _cache) {
  var _component_var_icon = (0, _vue.resolveComponent)("var-icon");

  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n())
  }, [(0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n(_ctx.direction))
  }, [(0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.n(_ctx.direction + "-main")),
    ref: _ctx.getRef
  }, [(0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(_ctx.direction + "-tag"), [_ctx.isActive || _ctx.isCurrent, _ctx.n(_ctx.direction + "-tag--active")])),
    style: (0, _vue.normalizeStyle)({
      backgroundColor: _ctx.isActive || _ctx.isCurrent ? _ctx.activeColor : _ctx.inactiveColor
    }),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.click && _ctx.click(...arguments);
    })
  }, [_ctx.isActive ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_icon, {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n('icon')),
    "var-step-cover": "",
    name: _ctx.activeIcon
  }, null, 8
  /* PROPS */
  , ["class", "name"])) : _ctx.isCurrent && _ctx.currentIcon ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_icon, {
    key: 1,
    class: (0, _vue.normalizeClass)(_ctx.n('icon')),
    "var-step-cover": "",
    name: _ctx.currentIcon
  }, null, 8
  /* PROPS */
  , ["class", "name"])) : _ctx.inactiveIcon ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_icon, {
    key: 2,
    class: (0, _vue.normalizeClass)(_ctx.n('icon')),
    "var-step-cover": "",
    name: _ctx.inactiveIcon
  }, null, 8
  /* PROPS */
  , ["class", "name"])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("span", _hoisted_1, (0, _vue.toDisplayString)(_ctx.index + 1), 1
  /* TEXT */
  ))], 6
  /* CLASS, STYLE */
  ), (0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(_ctx.direction + "-content"), [_ctx.isActive || _ctx.isCurrent, _ctx.n(_ctx.direction + "-content--active")])),
    onClick: _cache[1] || (_cache[1] = function () {
      return _ctx.click && _ctx.click(...arguments);
    })
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default")], 2
  /* CLASS */
  )], 2
  /* CLASS */
  ), !_ctx.isLastChild ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    key: 0,
    class: (0, _vue.normalizeClass)(_ctx.n(_ctx.direction + "-line")),
    style: (0, _vue.normalizeStyle)({
      margin: _ctx.lineMargin
    })
  }, null, 6
  /* CLASS, STYLE */
  )) : (0, _vue.createCommentVNode)("v-if", true)], 2
  /* CLASS */
  )], 2
  /* CLASS */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarStep',
  components: {
    VarIcon: _icon.default
  },
  props: _props.props,

  setup() {
    var main = (0, _vue.ref)(null);
    var lineMargin = (0, _vue.ref)('');
    var isLastChild = (0, _vue.ref)(false);
    var {
      index,
      steps,
      bindSteps
    } = (0, _provide.useSteps)();
    var {
      active,
      length,
      activeColor,
      inactiveColor,
      direction,
      clickStep
    } = steps;
    var isCurrent = (0, _vue.computed)(() => active.value === index.value);
    var isActive = (0, _vue.computed)(() => index.value !== -1 && active.value > index.value);
    var stepProvider = {
      index
    };

    var click = () => clickStep(index.value);

    var getRef = el => {
      if (direction.value === 'horizontal') {
        main.value = el;
      }
    };

    bindSteps(stepProvider);
    (0, _vue.watch)(length, newLength => {
      isLastChild.value = newLength - 1 === index.value;

      if (main.value) {
        var margin = main.value.offsetWidth / 2 - 14;
        lineMargin.value = "0 -" + margin + "px";
      }
    });
    return {
      n,
      classes,
      main,
      index,
      isActive,
      isCurrent,
      direction,
      lineMargin,
      activeColor,
      inactiveColor,
      isLastChild,
      click,
      getRef
    };
  }

});

exports.default = _default;