"use strict";

exports.__esModule = true;
exports.default = void 0;
exports.render = render;

var _vue = require("vue");

var _props = require("./props");

var _provide = require("./provide");

var _elements = require("../utils/elements");

var _components = require("../utils/components");

var {
  n,
  classes
} = (0, _components.createNamespace)('row');

function render(_ctx, _cache) {
  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(_ctx.classes(_ctx.n(), 'var--box')),
    style: (0, _vue.normalizeStyle)({
      justifyContent: _ctx.justify,
      alignItems: _ctx.align,
      margin: _ctx.average ? "0 -" + _ctx.average + "px" : undefined
    }),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.onClick && _ctx.onClick(...arguments);
    })
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default")], 6
  /* CLASS, STYLE */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarRow',
  props: _props.props,

  setup(props) {
    var {
      cols,
      bindCols,
      length
    } = (0, _provide.useCols)();
    var average = (0, _vue.computed)(() => {
      var gutter = (0, _elements.toPxNum)(props.gutter);
      return gutter / 2;
    });

    var computePadding = () => {
      cols.forEach(col => {
        col.setPadding({
          left: average.value,
          right: average.value
        });
      });
    };

    var rowProvider = {
      computePadding
    };
    (0, _vue.watch)(() => length.value, computePadding);
    (0, _vue.watch)(() => props.gutter, computePadding);
    bindCols(rowProvider);
    return {
      n,
      classes,
      average
    };
  }

});

exports.default = _default;